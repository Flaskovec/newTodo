[{"E:\\js\\incubator\\todolist-16\\src\\reportWebVitals.ts":"1","E:\\js\\incubator\\todolist-16\\src\\app\\app-reducer.ts":"2","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"3","E:\\js\\incubator\\todolist-16\\src\\utils\\error-utils.ts":"4","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"5","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","E:\\js\\incubator\\todolist-16\\src\\app\\App.tsx":"7","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"8","E:\\js\\incubator\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx":"9","E:\\js\\incubator\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"10","E:\\js\\incubator\\todolist-16\\src\\api\\todolists-api.ts":"11","E:\\js\\incubator\\todolist-16\\src\\index.tsx":"12","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"13","E:\\js\\incubator\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","E:\\js\\incubator\\todolist-16\\src\\features\\Login\\Login.tsx":"15","E:\\js\\incubator\\todolist-16\\src\\features\\Login\\auth-reducer.ts":"16","E:\\js\\incubator\\todolist-16\\src\\app\\store.ts":"17"},{"size":425,"mtime":1607869388000,"results":"18","hashOfConfig":"19"},{"size":2283,"mtime":1616577323162,"results":"20","hashOfConfig":"19"},{"size":3742,"mtime":1616574545212,"results":"21","hashOfConfig":"19"},{"size":811,"mtime":1596719330000,"results":"22","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"23","hashOfConfig":"19"},{"size":5619,"mtime":1616491856080,"results":"24","hashOfConfig":"19"},{"size":2552,"mtime":1616580140690,"results":"25","hashOfConfig":"19"},{"size":4193,"mtime":1596715250000,"results":"26","hashOfConfig":"19"},{"size":1595,"mtime":1596715562000,"results":"27","hashOfConfig":"19"},{"size":952,"mtime":1594154724000,"results":"28","hashOfConfig":"19"},{"size":2996,"mtime":1616579627162,"results":"29","hashOfConfig":"19"},{"size":643,"mtime":1611389400000,"results":"30","hashOfConfig":"19"},{"size":4585,"mtime":1597327450000,"results":"31","hashOfConfig":"19"},{"size":1092,"mtime":1596716576000,"results":"32","hashOfConfig":"19"},{"size":2942,"mtime":1616573845385,"results":"33","hashOfConfig":"19"},{"size":1893,"mtime":1616580025230,"results":"34","hashOfConfig":"19"},{"size":1190,"mtime":1616573384058,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lg6dbk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\js\\incubator\\todolist-16\\src\\reportWebVitals.ts",[],"E:\\js\\incubator\\todolist-16\\src\\app\\app-reducer.ts",[],"E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["74","75","76","77","78","79","80","81"],"E:\\js\\incubator\\todolist-16\\src\\utils\\error-utils.ts",[],"E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["82","83","84"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts",[],["85","86"],"E:\\js\\incubator\\todolist-16\\src\\app\\App.tsx",["87"],"E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["88","89","90","91","92","93"],"E:\\js\\incubator\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx",["94","95","96"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\js\\incubator\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"E:\\js\\incubator\\todolist-16\\src\\api\\todolists-api.ts",[],"E:\\js\\incubator\\todolist-16\\src\\index.tsx",[],"E:\\js\\incubator\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["97"],"E:\\js\\incubator\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"E:\\js\\incubator\\todolist-16\\src\\features\\Login\\Login.tsx",["98"],"import React from 'react';\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginTC } from './auth-reducer';\r\nimport { AppRootStateType } from '../../app/store';\r\nimport { Redirect } from 'react-router';\r\n\r\ntype FormikErrorType = {\r\n  email?: string;\r\n  password?: string;\r\n  rememberMe?: boolean;\r\n};\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector<AppRootStateType>((state) => state.auth.isLoggedIn);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      rememberMe: false,\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(loginTC(values));\r\n      formik.resetForm();\r\n    },\r\n    validate: (values) => {\r\n      const errors: FormikErrorType = {};\r\n      if (!values.email) {\r\n        errors.email = 'Email is required';\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n      }\r\n      if (!values.password) {\r\n        errors.password = 'Password is required';\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={4}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <FormControl>\r\n            <FormLabel>\r\n              <p>\r\n                To log in get registered\r\n                <a href={'https://social-network.samuraijs.com/'} target={'_blank'}>\r\n                  here\r\n                </a>\r\n              </p>\r\n              <p>or use common test account credentials:</p>\r\n              <p>Email: free@samuraijs.com</p>\r\n              <p>Password: free</p>\r\n            </FormLabel>\r\n            <FormGroup>\r\n              <TextField label=\"Email\" margin=\"normal\" {...formik.getFieldProps('email')} />\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div style={{ color: 'red' }}>{formik.errors.email}</div>\r\n              ) : null}\r\n              <TextField type=\"password\" label=\"Password\" margin=\"normal\" {...formik.getFieldProps('password')} />\r\n              {formik.touched.email && formik.errors.password ? (\r\n                <div style={{ color: 'red' }}>{formik.errors.password}</div>\r\n              ) : null}\r\n              <FormControlLabel\r\n                label={'Remember me'}\r\n                control={<Checkbox name={'remember me'} />}\r\n                {...formik.getFieldProps('remember me')}\r\n              />\r\n              <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                Login\r\n              </Button>\r\n            </FormGroup>\r\n          </FormControl>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","E:\\js\\incubator\\todolist-16\\src\\features\\Login\\auth-reducer.ts",[],"E:\\js\\incubator\\todolist-16\\src\\app\\store.ts",[],{"ruleId":"99","severity":1,"message":"100","line":37,"column":6,"nodeType":"101","endLine":37,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":42,"column":6,"nodeType":"101","endLine":42,"endColumn":8,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"103","line":47,"column":6,"nodeType":"101","endLine":47,"endColumn":8,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"103","line":52,"column":6,"nodeType":"101","endLine":52,"endColumn":8,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"103","line":57,"column":6,"nodeType":"101","endLine":57,"endColumn":8,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"103","line":62,"column":6,"nodeType":"101","endLine":62,"endColumn":8,"suggestions":"108"},{"ruleId":"99","severity":1,"message":"103","line":67,"column":6,"nodeType":"101","endLine":67,"endColumn":8,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"103","line":72,"column":6,"nodeType":"101","endLine":72,"endColumn":8,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"111","line":15,"column":97,"nodeType":"101","endLine":15,"endColumn":130,"suggestions":"112"},{"ruleId":"99","severity":1,"message":"111","line":20,"column":8,"nodeType":"101","endLine":20,"endColumn":41,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"111","line":24,"column":8,"nodeType":"101","endLine":24,"endColumn":41,"suggestions":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"99","severity":1,"message":"119","line":36,"column":6,"nodeType":"101","endLine":36,"endColumn":8,"suggestions":"120"},{"ruleId":"99","severity":1,"message":"121","line":35,"column":8,"nodeType":"101","endLine":35,"endColumn":10,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"111","line":39,"column":8,"nodeType":"101","endLine":39,"endColumn":42,"suggestions":"123"},{"ruleId":"99","severity":1,"message":"111","line":46,"column":8,"nodeType":"101","endLine":46,"endColumn":54,"suggestions":"124"},{"ruleId":"99","severity":1,"message":"111","line":48,"column":95,"nodeType":"101","endLine":48,"endColumn":134,"suggestions":"125"},{"ruleId":"99","severity":1,"message":"111","line":49,"column":101,"nodeType":"101","endLine":49,"endColumn":140,"suggestions":"126"},{"ruleId":"99","severity":1,"message":"111","line":50,"column":107,"nodeType":"101","endLine":50,"endColumn":146,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":14,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"133","line":2,"column":22,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"134","severity":1,"message":"135","line":10,"column":45,"nodeType":"136","messageId":"137","endLine":10,"endColumn":47},{"ruleId":"138","severity":1,"message":"139","line":64,"column":67,"nodeType":"140","endLine":64,"endColumn":84},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],["143"],["144"],["145"],["146"],["147"],["148"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["149"],["150"],["151"],"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["155"],["156"],["157"],["158"],["159"],["160"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"163","fix":"166"},{"desc":"163","fix":"167"},{"desc":"163","fix":"168"},{"desc":"163","fix":"169"},{"desc":"163","fix":"170"},{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},{"desc":"171","fix":"174"},"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"175"},{"desc":"176","fix":"177"},{"desc":"171","fix":"178"},{"desc":"171","fix":"179"},{"desc":"171","fix":"180"},{"desc":"171","fix":"181"},{"desc":"171","fix":"182"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},{"range":"187","text":"186"},{"range":"188","text":"186"},{"range":"189","text":"186"},{"range":"190","text":"186"},{"range":"191","text":"186"},{"range":"192","text":"186"},"Update the dependencies array to be: [props]",{"range":"193","text":"194"},{"range":"195","text":"194"},{"range":"196","text":"194"},{"range":"197","text":"186"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"198","text":"199"},{"range":"200","text":"194"},{"range":"201","text":"194"},{"range":"202","text":"194"},{"range":"203","text":"194"},{"range":"204","text":"194"},[1310,1312],"[demo, dispatch, isLoggedIn]",[1472,1474],"[dispatch]",[1634,1636],[1832,1834],[2038,2040],[2230,2232],[2368,2370],[2538,2540],[765,798],"[props]",[1071,1104],[1261,1294],[1267,1269],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320]]